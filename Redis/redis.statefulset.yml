apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: smaster-redis-cluster
  namespace: default
  labels:
    app.kubernetes.io/instance: smaster
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: redis-cluster
    helm.sh/chart: redis-cluster-7.0.13
spec:
  replicas: 6
  selector:
    matchLabels:
      app.kubernetes.io/instance: smaster
      app.kubernetes.io/name: redis-cluster
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: smaster
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: redis-cluster
        helm.sh/chart: redis-cluster-7.0.13
      annotations:
        checksum/scripts: 36ab70bc5d2f2a12415168036e6cb97800d1596fd5e25b77585a54bc1a4d51a8
        checksum/secret: 5061f8b64444dc5bd26f6aa75c3b31ee2d7526e148331f6f6e57ac027e048ef8
    spec:
      volumes:
        - name: scripts
          configMap:
            name: smaster-redis-cluster-scripts
            defaultMode: 493
        - name: default-config
          configMap:
            name: smaster-redis-cluster-default
            defaultMode: 420
        - name: redis-tmp-conf
          emptyDir: {}
      containers:
        - name: smaster-redis-cluster
          image: 'docker.io/bitnami/redis-cluster:6.2.6-debian-10-r49'
          command:
            - /bin/bash
            - '-c'
          args:
            - >
              # Backwards compatibility change

              if ! [[ -f /opt/bitnami/redis/etc/redis.conf ]]; then
                  echo COPYING FILE
                  cp  /opt/bitnami/redis/etc/redis-default.conf /opt/bitnami/redis/etc/redis.conf
              fi

              pod_index=($(echo "$POD_NAME" | tr "-" "\n"))

              pod_index="${pod_index[-1]}"

              if [[ "$pod_index" == "0" ]]; then
                export REDIS_CLUSTER_CREATOR="yes"
                export REDIS_CLUSTER_REPLICAS="1"
              fi

              /opt/bitnami/scripts/redis-cluster/entrypoint.sh
              /opt/bitnami/scripts/redis-cluster/run.sh
          ports:
            - name: tcp-redis
              containerPort: 6379
              protocol: TCP
            - name: tcp-redis-bus
              containerPort: 16379
              protocol: TCP
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.name
            - name: REDIS_NODES
              value: >-
                smaster-redis-cluster-0.smaster-redis-cluster-headless
                smaster-redis-cluster-1.smaster-redis-cluster-headless
                smaster-redis-cluster-2.smaster-redis-cluster-headless
                smaster-redis-cluster-3.smaster-redis-cluster-headless
                smaster-redis-cluster-4.smaster-redis-cluster-headless
                smaster-redis-cluster-5.smaster-redis-cluster-headless 
            - name: REDISCLI_AUTH
              valueFrom:
                secretKeyRef:
                  name: smaster-redis-cluster
                  key: redis-password
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: smaster-redis-cluster
                  key: redis-password
            - name: REDIS_AOF_ENABLED
              value: 'yes'
            - name: REDIS_TLS_ENABLED
              value: 'no'
            - name: REDIS_PORT
              value: '6379'
          resources: {}
          volumeMounts:
            - name: scripts
              mountPath: /scripts
            - name: redis-data
              mountPath: /bitnami/redis/data
            - name: default-config
              mountPath: /opt/bitnami/redis/etc/redis-default.conf
              subPath: redis-default.conf
            - name: redis-tmp-conf
              mountPath: /opt/bitnami/redis/etc/
          livenessProbe:
            exec:
              command:
                - sh
                - '-c'
                - /scripts/ping_liveness_local.sh 5
            initialDelaySeconds: 5
            timeoutSeconds: 6
            periodSeconds: 5
            successThreshold: 1
            failureThreshold: 5
          readinessProbe:
            exec:
              command:
                - sh
                - '-c'
                - /scripts/ping_readiness_local.sh 1
            initialDelaySeconds: 5
            timeoutSeconds: 2
            periodSeconds: 5
            successThreshold: 1
            failureThreshold: 5
          imagePullPolicy: IfNotPresent
          securityContext:
            runAsUser: 1001
            runAsNonRoot: true
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      serviceAccountName: default
      serviceAccount: default
      securityContext:
        runAsUser: 1001
        fsGroup: 1001
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 1
              podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/instance: smaster
                    app.kubernetes.io/name: redis-cluster
                namespaces:
                  - default
                topologyKey: kubernetes.io/hostname
      schedulerName: default-scheduler
  volumeClaimTemplates:
    - kind: PersistentVolumeClaim
      apiVersion: v1
      metadata:
        name: redis-data
        labels:
          app.kubernetes.io/instance: smaster
          app.kubernetes.io/name: redis-cluster
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 8Gi
        volumeMode: Filesystem
  serviceName: smaster-redis-cluster-headless
  podManagementPolicy: Parallel
